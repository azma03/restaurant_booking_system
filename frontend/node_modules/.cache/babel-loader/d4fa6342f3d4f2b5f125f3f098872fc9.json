{"ast":null,"code":"import _classCallCheck from \"/Users/stephenhart/Documents/Documents - Stephen\\u2019s MacBook Air/Codeclan/week15/restaurant_booking_system/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stephenhart/Documents/Documents - Stephen\\u2019s MacBook Air/Codeclan/week15/restaurant_booking_system/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stephenhart/Documents/Documents - Stephen\\u2019s MacBook Air/Codeclan/week15/restaurant_booking_system/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stephenhart/Documents/Documents - Stephen\\u2019s MacBook Air/Codeclan/week15/restaurant_booking_system/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stephenhart/Documents/Documents - Stephen\\u2019s MacBook Air/Codeclan/week15/restaurant_booking_system/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/stephenhart/Documents/Documents - Stephen\\u2019s MacBook Air/Codeclan/week15/restaurant_booking_system/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/stephenhart/Documents/Documents - Stephen\\u2019s MacBook Air/Codeclan/week15/restaurant_booking_system/frontend/src/containers/TableContainer.js\";\nimport React, { Component } from 'react';\nimport TableList from '../components/Tables/TableList';\nimport TableForm from '../components/Tables/TableForm';\nimport Request from '../helpers/request';\n\nvar TableContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableContainer, _Component);\n\n  function TableContainer(props) {\n    var _this;\n\n    _classCallCheck(this, TableContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TableContainer).call(this, props));\n    _this.state = {\n      date: \"\",\n      time: \"\",\n      partySize: \"\",\n      data: [{\n        id: 1,\n        restaurant_id: 1,\n        bookings: [],\n        capacity: 4,\n        available: true\n      }, {\n        id: 2,\n        restaurant_id: 1,\n        bookings: [],\n        capacity: 2,\n        available: false\n      }]\n    };\n    _this.handleFormSubmit = _this.handleFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TableContainer, [{\n    key: \"handleFormSubmit\",\n    value: function handleFormSubmit(partySize, date, time) {\n      this.setState({\n        partySize: partySize,\n        date: date,\n        time: time\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var request = new Request();\n      request.get('/api/booths').then(function (data) {\n        _this2.setState({\n          data: data._embedded.booths\n        });\n      });\n    }\n  }, {\n    key: \"getAllBookings\",\n    value: function getAllBookings() {\n      var _this3 = this;\n\n      var allBookings = [];\n\n      for (var i = 1; i < 7; i++) {\n        var request = new Request();\n        request.get(\"/api/booths/\".concat(i, \"/bookings\")).then(function (data) {\n          allBookings.push(data._embedded.bookings);\n          debugger;\n\n          for (var _i = 0; _i < allBookings.length; _i++) {\n            var booking = allBookings[_i];\n\n            if (booking.booth.capacity > _this3.state.partySize) {\n              if (booking.date !== _this3.state.date & booking.timeSlot !== _this3.state.time) {\n                _this3.handleTableAvailabilityUpdate(i, {\n                  \"op\": \"replace\",\n                  \"value\": \"TRUE\"\n                });\n              }\n            }\n\n            _this3.handleTableAvailabilityUpdate(i, {\n              \"op\": \"replace\",\n              \"value\": \"FALSE\"\n            });\n          }\n\n          allBookings = [];\n        });\n      }\n\n      console.log(allBookings);\n      return allBookings;\n    }\n  }, {\n    key: \"handleTableAvailabilityUpdate\",\n    value: function handleTableAvailabilityUpdate(booth, path) {\n      var url = '/api/booths/' + booth + '/available';\n      var request = new Request();\n      request.patch(url, path).then(function (data) {\n        window.location = '/booths';\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.getAllBookings();\n      return React.createElement(React.Fragment, null, React.createElement(TableForm, {\n        onFormSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" \", this.state.date, this.state.time, this.state.partySize), React.createElement(TableList, {\n        data: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TableContainer;\n}(Component);\n\n;\nexport default TableContainer;","map":{"version":3,"sources":["/Users/stephenhart/Documents/Documents - Stephenâ€™s MacBook Air/Codeclan/week15/restaurant_booking_system/frontend/src/containers/TableContainer.js"],"names":["React","Component","TableList","TableForm","Request","TableContainer","props","state","date","time","partySize","data","id","restaurant_id","bookings","capacity","available","handleFormSubmit","bind","setState","request","get","then","_embedded","booths","allBookings","i","push","booking","booth","timeSlot","handleTableAvailabilityUpdate","console","log","path","url","patch","window","location","getAllBookings"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport TableList from '../components/Tables/TableList';\nimport TableForm from '../components/Tables/TableForm';\nimport Request from '../helpers/request';\n\n\nclass TableContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      date: \"\",\n      time: \"\",\n      partySize: \"\",\n      data:[{\n        id:1,\n        restaurant_id:1,\n        bookings:[],\n        capacity:4,\n        available:true\n      },\n      {\n        id:2,\n        restaurant_id:1,\n        bookings:[],\n        capacity:2,\n        available:false\n      }]\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  };\n\n  handleFormSubmit(partySize, date, time){\n  this.setState({partySize: partySize, date: date, time:time});\n\n};\n\ncomponentDidMount(){\n   let request = new Request()\n   request.get('/api/booths').then((data) => {\n     this.setState({data: data._embedded.booths});\n   })\n }\n\ngetAllBookings(){\n  let allBookings = [];\n  for (var i = 1; i< 7; i++) {\n  let request = new Request()\n  request.get(`/api/booths/${i}/bookings`).then((data) => {\n    allBookings.push(data._embedded.bookings);\ndebugger;\n        for (var booking of allBookings){\n      if(booking.booth.capacity > this.state.partySize){\n        if((booking.date !== this.state.date) & (booking.timeSlot !== this.state.time)){\n          this.handleTableAvailabilityUpdate(i, { \"op\": \"replace\", \"value\": \"TRUE\" })\n        }\n      }\n      this.handleTableAvailabilityUpdate(i, { \"op\": \"replace\", \"value\": \"FALSE\" })\n    }\n      allBookings=[];\n  })\n}\n\nconsole.log(allBookings)\nreturn allBookings;\n}\n\n  handleTableAvailabilityUpdate(booth, path){\n   const url = '/api/booths/' + booth + '/available';\n   let request = new Request();\n   request.patch(url, path).then(data => {\n     window.location = '/booths'\n   })\n }\n\n  render(){\n    this.getAllBookings();\n    return(\n      <>\n      <TableForm onFormSubmit = {this.handleFormSubmit}/>\n        <p> {this.state.date}{this.state.time}{this.state.partySize}</p>\n      <TableList data={this.state.data}/>\n      </>\n    );\n  };\n};\n\nexport default TableContainer;\n"]},"metadata":{},"sourceType":"module"}